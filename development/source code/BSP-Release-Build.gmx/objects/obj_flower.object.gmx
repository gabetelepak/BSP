<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_flower_cosmos_dead</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_scenery_static_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

image_speed = .05;
spawn = 0;
spr_shadow = spr_flower_shadow;

//default
spr_head = spr_flower_cosmos_purple;
spr_stem = spr_flower_cosmos_stem;
spr_dead_head = spr_flower_cosmos_dead;
spr_dead_stem = spr_flower_cosmos_dead_stem;

petal_color = c_purple;
petal_alarm = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if spawn = 0{spawn = 1;
spr_head = asset_get_index("spr_flower_"+string(name)+"_"+string(colorn));
spr_stem = asset_get_index("spr_flower_"+string(name)+"_stem");
spr_dead_head = asset_get_index("spr_flower_"+string(name)+"_dead");
spr_dead_stem = asset_get_index("spr_flower_"+string(name)+"_dead_stem");
sprite_index = spr_stem;

if colorn = "purple"{petal_color = g.c_flower_purple;}
if colorn = "red"{petal_color = g.c_flower_red;}
if colorn = "white"{petal_color = c_white;}
if colorn = "yellow"{petal_color = c_yellow;}

}

//walk through
if scr_pug_dis(2){
if pug.speed &gt; 0{
if petal_alarm&lt;= 0{
repeat(floor(random(4))){
opt = instance_create(x,y-2,obj_petal);
opt.color = petal_color;
petal_alarm = 15;}}}}

//bark
if scr_pug_dis(32){ 
if pug.sprite_index = pug.spr_bark{
if pug.pug_action = 3{
repeat(floor(random(5))){
opt = instance_create(x,y-2,obj_petal);
opt.color = petal_color;
petal_alarm = 45;
image_speed = .2;}
}}}


if petal_alarm &gt; 0{petal_alarm -= 1;}else{image_speed = .05;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

draw_sprite_ext(spr_head,image_single,x,y,1*face,1,rot,color,alpha);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
