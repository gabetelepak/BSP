<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_blank</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
image_speed = 0;
face = 1;
scale = 1;
color = c_white;
alpha = 1;
rot = 0;
spr_shadow = spr_blank;
spr_bush_splash = 0;
bush_splash = 0;
z = 0;
bush_shake = 0;
scr_depth();


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_pug_nearest();
//scr_depth();


if g.mpgrid &gt; 0{
}


//draw shadow
if spr_shadow != spr_blank{
if surface_exists(g.surf_shadow){
surface_set_target(g.surf_shadow);
draw_set_blend_mode(bm_normal);
draw_sprite_ext(spr_shadow,0,x,y,1,1,0,g.c_night_shadow,alpha);
draw_set_blend_mode(bm_normal);
surface_reset_target();
}}///////////////


//bush shake
if bush_shake &gt; 0{
if bush_shake = 1{rot_dir = 1;
scr_sound(snd_green_shake,g.sfx_volume);}
bush_shake -= .05;
rot += rot_dir;
if rot &gt; 1{rot_dir = -1;}
if rot &lt; -1{rot_dir = 1;}
if bush_shake = 0{rot = 0;rot_dir = 0;}
}




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if !surface_exists(surface){surface = surface_create(sprite_width, sprite_height);}
//surface_set_target(surface);
//draw_clear_alpha(c_white,0);




draw_sprite_ext(sprite_index,image_single,x,y,scale*face,scale,rot,color,alpha);


//bush splash leaf effect
if spr_bush_splash &gt; 0{
if bush_splash &gt; 0{
bush_splash += .25;
draw_sprite_ext(spr_bush_splash,bush_splash-1,x,y,1,1,rot,color,alpha);
if bush_splash = sprite_get_number(spr_bush_splash)+1{bush_splash = 0;}
}}



//if show_stick = 1{draw_sprite_ext(spr_stick_hint,0,x-12,y-ihint+4,1,1,rot,c_white,alpha);
//if hint_flash &lt; 5{draw_sprite_ext(spr_stick_hint_flash,hint_flash,x-12,y-ihint+4,1,1,rot,c_white,alpha);}}

//if show_frisbee = 1{draw_sprite_ext(spr_frisbee_hint,0,x-12,y-ihint,1,1,rot,c_white,alpha);
//if hint_flash &lt; 5{draw_sprite_ext(spr_frisbee_hint_flash,hint_flash,x-12,y-ihint,1,1,rot,c_white,alpha);}}

/*




//surface_reset_target();
//draw_surface_ext(surface,x-sprite_get_xoffset(sprite_index)*1,y-sprite_get_yoffset(sprite_index)*1,1,1,0,c_white,1);


/*
if highlight &gt; 0 &amp;&amp; spr_highlight &gt; 0{
draw_sprite_ext(spr_highlight,highlight-1,x,y,scale,scale,rot,color,alpha);}

if g.highlight = id{
draw_set_blend_mode(bm_add);
draw_sprite_ext(sprite_index,image_single,x,y,scale,scale,rot,color,.2);
draw_set_blend_mode(bm_normal);}
*/




</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
