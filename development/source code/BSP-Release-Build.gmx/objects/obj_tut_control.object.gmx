<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_tut_control_run</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = .25;
stage = 0;
player = g.tut_stage;
g.tut_stage += 1;
if g.tut_stage = 2{g.tut_stage = 0;}

good_sprite = spr_good_dim;
good_anim = 4;

stage_plus = 0;
progress = 0;
end_tut = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if good_anim &lt; sprite_get_number(good_sprite)-1{
good_anim += .5;}

if end_tut &gt; 0{end_tut -= 1;obj_tut_sign.end_tut = end_tut;
if end_tut = 30{g.fade = -30;}
if end_tut = 1{
if !audio_is_playing(music_central_bark){
scr_start_park();}}}


if stage_plus &gt; 0{
stage_plus -= 1;
if stage_plus = 1{
stage+=1;
if stage = 6 &amp;&amp; player = 0{end_tut = 240;}


if stage = 2{
if instance_number(obj_castle) &lt; 2{
with obj_sandbox{
instance_create(216,252,obj_castle);
instance_create(420,252,obj_castle);}
with obj_pug{
if player = 0{x = 264;y=264;}else{
x = 372;y = 264;}
}
}}

obj_pug.tut_sniff = 0;
good_sprite = spr_good_dim;
good_anim = 0;
obj_tut_sign.stage = stage;}}


//check running.
if stage = 0{
sprite_index = spr_tut_control_run;
g.i = id;
with obj_pug{
if g.i.player = player{
if tut_run &gt;= 200{g.i.stage += 1;}
}}

if stage = 1{
good_sprite = spr_good_init;
good_anim = 0;
scr_sound(snd_pug_ability,g.sfx_volume);}
}


if stage = 1{
sprite_index = spr_tut_control_idle;
g.tut_stage = 0;
with obj_tut_control{
g.tut_stage += stage;}
if g.tut_stage &gt;= stage*2{
if stage_plus = 0{
stage_plus = 75;}}
}

//check sniff
if stage = 2{
sprite_index = spr_tut_control_powers;
g.i = id;
with obj_pug{
if g.i.player = player{
if tut_power &gt;= 1{g.i.stage += 1;}
}}

if stage = 3{
scr_sound(snd_pug_ability,g.sfx_volume);
good_sprite = spr_good_init;
good_anim = 0;}}


if stage = 3{
sprite_index = spr_tut_control_idle;

if good_sprite != spr_good_init{
good_sprite = spr_good_init;
good_anim = 0;
scr_sound(snd_pug_ability,g.sfx_volume);}

g.tut_stage = 0;
with obj_tut_control{
g.tut_stage += stage;}
if g.tut_stage &gt;= stage*2{
if stage_plus = 0{
stage_plus = 75;}}
}

//check power
if stage = 4{
sprite_index = spr_tut_control_sniff;
g.i = id;
with obj_pug{
if g.i.player = player{
if tut_sniff &gt;= 1{g.i.stage += 1;}
}}}


if stage = 5 &amp;&amp; stage_plus &lt;= 1{
sprite_index = spr_tut_control_idle;
if good_sprite != spr_good_init{
good_sprite = spr_good_init;
good_anim = 0;
scr_sound(snd_pug_ability,g.sfx_volume);}

g.tut_stage = 0;
with obj_tut_control{
g.tut_stage += stage;}
if g.tut_stage &gt;= stage*2{stage_plus = 75;}}





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index,image_single,x,y,1,1,0,c_white,1);
draw_sprite_ext(good_sprite,good_anim,x,y-110,1,1,0,c_white,1);
draw_set_color(c_black);
//draw_text(x,y-500,stage);

//for game pad icons

/*
if player = 1{
i = 2;
if stage &gt;= 2{
i = 0;
if g.pugid[player].gamepad_str = "BUMP LEFT" || g.pugid[player].gamepad_str = "TRIG LEFT"{i = 1;}}
draw_sprite_ext(spr_lb,i,x-52*3,y-50*3,3,3,0,c_white,1);

i = 2;
if stage &gt;= 2{
i = 0;
if g.pugid[player].gamepad_str = "BUMP RIGHT" || g.pugid[player].gamepad_str = "TRIG RIGHT"{i = 1;}}
draw_sprite_ext(spr_rb,i,x+52*3,y-50*3,3,3,0,c_white,1);

i = 2;
if stage &gt;= 4{
i = 0;
if g.pugid[player].gamepad_str = "Y"{i = 1;}}
draw_sprite_ext(spr_y,i,x,y+62*3,3,3,0,c_white,1);}




*/

/*

if g.force_gamepad = 0{
if player = 0{

i = 2;
if stage = 0{i = keyboard_check(ord('W'));}
draw_sprite_ext(spr_key_w,i,x,y-48*3,3,3,0,c_white,1);
if stage = 0{i = keyboard_check(ord('S'));}
draw_sprite_ext(spr_key_s,i,x,y+12*3,3,3,0,c_white,1);
if stage = 0{i = keyboard_check(ord('A'));}
draw_sprite_ext(spr_key_a,i,x-30*3,y-18*3,3,3,0,c_white,1);;
if stage = 0{i = keyboard_check(ord('D'));}
draw_sprite_ext(spr_key_d,i,x+30*3,y-18*3,3,3,0,c_white,1);

i = 2;
if stage = 2{i = keyboard_check(ord('Q'));}
draw_sprite_ext(spr_key_q,i,x-52*3,y-50*3,3,3,0,c_white,1);
if stage = 2{i = keyboard_check(ord('E'));}
draw_sprite_ext(spr_key_e,i,x+52*3,y-50*3,3,3,0,c_white,1);

i = 2;
if stage = 4{i = keyboard_check(ord('3'));}
draw_sprite_ext(spr_key_3,i,x,y+62*3,3,3,0,c_white,1);


}



if player = 1{
i = 2;
if stage = 0{i = keyboard_check(ord('I'));}
draw_sprite_ext(spr_key_i,i,x,y-48*3,3,3,0,c_white,1);
if stage = 0{i = keyboard_check(ord('K'));}
draw_sprite_ext(spr_key_k,i,x,y+12*3,3,3,0,c_white,1);
if stage = 0{i = keyboard_check(ord('J'));}
draw_sprite_ext(spr_key_j,i,x-30*3,y-18*3,3,3,0,c_white,1);;
if stage = 0{i = keyboard_check(ord('L'));}
draw_sprite_ext(spr_key_l,i,x+30*3,y-18*3,3,3,0,c_white,1);

i = 2;
if stage = 2{i = keyboard_check(ord('U'));}
draw_sprite_ext(spr_key_u,i,x-52*3,y-50*3,3,3,0,c_white,1);
if stage = 2{i = keyboard_check(ord('O'));}
draw_sprite_ext(spr_key_o,i,x+52*3,y-50*3,3,3,0,c_white,1);

i = 2;
if stage = 4{i = keyboard_check(ord('8'));}
draw_sprite_ext(spr_key_8,i,x,y+62*3,3,3,0,c_white,1);

}
}


*/




</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
