<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_baby_duck_walk</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_kenetic_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
zgrav = 0.075;
zbouncable = 0;
spr_shadow = spr_babyduck_shadow;
image_speed = .15;
zspeed = 0;
stage = "sandbox";
move_speed = .5;
maxdis = 6;

//duck
swim = 0;
interact = "";
action = 0;
alarm[0] = floor(random(60))+60;

obj_num = 0;
var i;
for (i = 0; i &lt; instance_number(obj_player); i += 1){
if id = instance_find(obj_player,i){
obj_num = i;}}


spr_walk = spr_baby_duck_walk;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if scr_pug_dis(96) {
if g.hungry_ducks_message = 0{
g.hungry_ducks_message = 1;
scr_moose_talk(spr_moose_talk,"Hmmm...it looks like those Baby Ducks
are hungry. Isnâ€™t Nuno selling 
bread right now?");}}



if stage = "sandbox"{
if instance_exists(obj_sandbox){
depth = obj_sandbox - 2;}}
zbouncable = 0;

alarm[1] -= 1;
alarm[0] -= 1;
if alarm[0] &lt;= 0{
action = 0;
spawn = 0;}

//g.check_babyduck = 1;

if g.check_babyduck = 1 &amp;&amp; stage = "sandbox"{
stage = "pug follow";}


if stage = "pug follow"{
maxdis = 24;
i = instance_nearest(x,y,obj_player);
spawn_x = i.x;
spawn_y = i.y;
move_speed = 1.5;


i = instance_find(obj_duck,1);
if scr_dis(i.x,i.y,x,y) &lt; 64{
if g.check_duck = 0{
g.check_duck = 1;
scr_check_burst(5);}}


}

/*
if g.check_duck = 1 &amp;&amp; stage = "pug follow"{
stage = "duck";}


if stage = "duck"{
i = instance_find(obj_duck,1);
spawn_x = i.x;
spawn_y = i.y;
move_speed = .5;
maxdis = 12;}
*/



if interact = ""{
spr_action = 0;

//swim in pong
/*
if position_meeting(x, y, obj_pond){
swim = 1;
action = 0;}
else{swim = 0;}
*/



if scr_pug_dis(64) {
if pug.sprite_index = pug.spr_bark{}}



if speed &gt; 0 || z &gt; 0{

sprite_index = spr_walk;

//taken out for xol
if direction &gt; 45 &amp;&amp; direction &lt; 90+45{
sprite_index = spr_baby_duck_walk_up;}
if direction &gt; 270-45 &amp;&amp; direction &lt; 270+45{
sprite_index = spr_baby_duck_walk_down;}


image_speed = .15;

if z &gt; 0{image_speed = .35;}

}
else{
sprite_index = spr_walk;
image_index = 0;
image_speed = 0;}

maxdis = 3;
if distance_to_point(spawn_x,spawn_y) &gt; maxdis{
direction = point_direction(x,y,spawn_x,spawn_y)-35+irandom(70);
speed = move_speed;}






if action = 0 &amp;&amp; alarm[1] &lt;= 0{
alarm[1] = 15 + floor(random(25));
if stage != "sandbox" &amp;&amp; z &lt;= 0{zspeed = .5+random(1.5);}
speed = move_speed;
if distance_to_point(spawn_x,spawn_y) &gt; maxdis{
direction = point_direction(x,y,spawn_x,spawn_y)-20+irandom(40);}}


}//end if no interact
/////////////////////////////////////////////////////////



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
//draw_sprite_ext(sprite_index,image_single,x,y-z-14,1,1,rot,color,alpha);

//draw_text(g.vx+10,g.vy+20+10*inst_number,interact);



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
